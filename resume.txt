LUKE SHIMANUKI


61 Bishop Allen Dr, Apt 2
Cambridge, MA 02139

luke@shimanuki.cc
(925) 331-0577

github.com/lukeshimanuki


EXPERIENCE

Software Development Engineer (2020 - present)
Magna Electronics (formerly Optimus Ride), Boston, Massachusetts
Designed and implemented probabilistic model for inferring trajectories and interactions between road users.
Formulated requirements and algorithmic design for ADAS features following automotive industry safety standards.

Prediction Intern (Summer 2018)
Cruise Automation (General Motors), San Francisco, California
Improved model for robotic cars to predict trajectories of other vehicles and bicyclists, passing 3x as many scenario tests.

Perception Intern (Summer 2017)
Optimus Ride, Boston, Massachusetts
Created system for robotic cars to predict and avoid other vehicles to handle intersections.

Machine Learning Intern (January 2017)
RightHand Robotics, Somerville, Massachusetts
Designed and implemented deep learning architectures for robotic vision and grasping.

Developer (2015 - 2016)
Tanius Technology (prop trading firm), Alamo, California
Implemented machine learning models and data pipeline to predict market patterns.


EDUCATION

Massachusetts Institute of Technology (2016 - 2020)

M.Eng Electrical Engineering & Computer Science (AI Concentration), GPA 5.0 (out of 5)
S.B. Double Major in Computer Science and Brain & Cognitive Science, GPA 4.9 (out of 5), 5.0 in-major (CS)
Coursework: Embedded Systems, Quantum Computation (G), Natural Language Processing, Computational Intelligence (G), Machine Learning (G), Theory of Computation (G), Advanced Data Structures (G), Computational Cognitive Science, Operating Systems (G), Robotics Science & Systems, Computational Linguistics (G), Design & Analysis of Algorithms


RESEARCH

MIT CSAIL Learning and Intelligent Systems Group (2017 - 2020)
Proved NP-hardness of 2D motion planning under obstacle uncertainty. WAFR 2018 & IJRR 2021
Developed efficient fixed-parameter algorithm for motion planning under obstacle uncertainty. Accepted to WAFR 2022.
Modeled value functions for guiding task-and-motion planning using graph networks. CoRL 2019 & IJRR 2021
Defined constraints for statistically safe control in the presence of mobile obstacles with unobservable policies. (preprint)
Designed system leveraging hierarchies to efficiently solve robotic planning tasks / POMDPs. (unpublished)

Stanford Autonomous Systems Laboratory (Summer 2015)
Developed simulation experiments comparing vehicle routing algorithms based on real-world ride requests. ICRA 2016
Designed vehicle routing algorithm with 10% improvement over state-of-the-art in simulation. Intel STS 2016


ACTIVITIES

Site Manager (2020)
Food for Free COVID-19 Relief Program
Directed team of volunteers for packing groceries and handing off to drivers to deliver to hundreds of households.

Program Director, Head Webmaster (2017 - 2020)
MIT Educational Studies Program
Directed educational programs (Splash, Summer HSSP) reaching ~3000 students with ~1000 classes taught by ~500 teachers and run by ~100 volunteers. Mentored future directors. Maintained website used by ~5000 students.

Software Lead (2012 - 2016)
AVBotz
Managed the programming team (~12 members) for autonomous submarine capable of manipulating objects, aiming and shooting torpedoes, and navigating around obstacles. International finalist (7th Place) at RoboSub 2015.

Co-President, HPMS Branch Director (2013 - 2016)
ACE Coding
Managed ~16 volunteers to teach weekly programming lessons to ~30 middle school students (~100 students annually).
Organized ACE Code Day, an 8 hour event attracting ~300 students. Taught machine vision workshop.

Middle School Tutor (2019 - 2020)
Cambridge School Volunteers



SKILLS

Proficient in C, C++, Python, Javascript, Java, UNIX Shell
Familiar with C#, LabView, Matlab, Simulink, Scala, x86 Assembly\Libraries: ROS, OpenCV, Theano, PyTorch, ReactJS, TensorFlow


AWARDS

USA Computing Olympiad Platinum Division
Intel Science Talent Search 2016 Semifinalist
Eagle Scout
MIT Battlecode 2018 Finalist (9th place)


PROJECTS

(C++) Low latency audio streaming to enable musicians to play together in-sync remotely using UDP hole-punching
(C) Web browser using Chromium's rendering engine with configurable vi-like key bindings
(C) C compiler to convert C code to x86 assembly
(Java) Neural network AI for a multiplayer platformer fighting game
(Python) Musical autocomplete to assist chord and melody composition
(Python) Gridded workspace manager for the i3 Window Manager

